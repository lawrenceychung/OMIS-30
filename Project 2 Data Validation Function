# import libraries
import random
from typing import Any, Union

#starting balance for user
user_account = 1000

while True:
    #makes all bet start at 0
    even_bet_amount = 0
    odd_bet_amount = 0
    black_bet_amount = 0
    red_bet_amount = 0
    low_bet_amount = 0
    high_bet_amount = 0
    single_number_bet_amount = 0
    user_single_number_bet_number = 38
    user_account = user_account

    #prints a roulette table for visualization
    roulette_table = ("""
                                 Roulette Table
       ______________________________________________________________________
       | R3 | B6 | R9 | R12 | B15 | R18 | R21 | B24 | R27 | R30 | B33 | R36 | | 2 to 1 |
    | 00 |____________________________________________________________________|
       | B2 | R5 | B8 | B11 | R14 | B17 | B20 | R23 | B26 | B29 | R32 | B35 | | 2 to 1 |
    | 0  |____________________________________________________________________|
       | R1 | B4 | R7 | B10 | B13 | R16 | R19 | B22 | R25 | B28 | B31 | R34 | | 2 to 1 |
       ______________________________________________________________________
       |       1st 12       |         2nd 12        |         3rd 12        |
      _________________________________________________________________________
      |   1 to 18   |   Even   |   Black   |   Red   |   Odd   |   19 to 36   |
    """)
    print(roulette_table)


    #prints possible bets in a menu for user to choose
    bets = {
        1 : "Even Bets",
        2 : "Odd Bets",
        3 : "Red Bets",
        4 : "Black Bets",
        5 : "Low Bets",
        6 : "High Bets",
        7 : "Single Number Bets",
        8 : "Spin Roulette",
        9 : "Stop Playing"
    }
    print(bets)

    #data validation function for bet amounts ONLY
    def user_validation(answer):
        while True:
            if not answer:
                answer = input("invalid input. Please try again ")
            elif answer.isdigit() == False:
                answer = input("invaild input. Please try again ")
            elif int(answer) < 0 or int(answer) > user_account:
                answer = input("invalid input. Please try again ")
            else:
                return answer

    #Determines user account balance after a specific bet
    while True:
        print("You currently have {} in your account".format(user_account))
        user_bet = input("Please enter your type of bet: ")
        if not user_bet:
            print("invalid input")
        elif user_bet.isdigit() == False:
            print("invalid input ")
        elif int(user_bet) < 1 or int(user_bet) > 8:
            print("invalid input ")
        elif int(user_bet) == 1:
            even_bet_amount = input("Please enter the amount to bet on even: ")
            validation = user_validation(even_bet_amount)
            user_account = user_account - int(validation)
            print ("You have ${} left after putting ${} on even".format(user_account, even_bet_amount))
        elif int(user_bet) == 2:
            odd_bet_amount = input("Please enter the amount to bet on odd: ")
            validation = user_validation(odd_bet_amount)
            user_account = user_account - int(validation)
            print("You have ${} left after putting ${} on odd".format(user_account, odd_bet_amount))
        elif int(user_bet) == 3:
            red_bet_amount = input("Please enter the amount to bet on red: ")
            validation = user_validation(red_bet_amount)
            user_account = user_account - int(validation)
            print("You have ${} left after putting ${} on red".format(user_account, red_bet_amount))
        elif int(user_bet) == 4:
            black_bet_amount = input("Please enter the amount to bet on black: ")
            validation = user_validation(black_bet_amount)
            user_account = user_account - int(validation)
            print("You have ${} left after putting ${} on black".format(user_account, black_bet_amount))
        elif int(user_bet) == 5:
            low_bet_amount = input("Please enter the amount to bet on low: ")
            validation = user_validation(low_bet_amount)
            user_account = user_account - int(validation)
            print("You have ${} left after putting ${} on low".format(user_account, low_bet_amount))
        elif int(user_bet) == 6:
            high_bet_amount = input("Please enter the amount to bet on high: ")
            validation = user_validation(high_bet_amount)
            user_account = user_account - int(validation)
            print("You have ${} left after putting ${} on high".format(user_account, high_bet_amount))
        elif int(user_bet) == 7:
            user_single_number_bet_number = input("What number do u want to bet on ")
            while True:
                if not user_single_number_bet_number:
                    user_single_number_bet_number = input("invalid input. Please try again ")
                elif user_single_number_bet_number.isdigit() == False:
                    user_single_number_bet_number = input("invaild input. Please try again ")
                elif int( user_single_number_bet_number) < 0 or int( user_single_number_bet_number) > 38:
                    user_single_number_bet_number = input("invalid input. Please try again ")
                else:
                    break
            single_number_bet_amount = input("Please enter the amount to bet on {}: ".format(user_single_number_bet_number))
            validation = user_validation(single_number_bet_amount)
            user_account = user_account - int(validation)
            print("You have ${} left after putting ${} on {}".format(user_account, single_number_bet_amount,user_single_number_bet_number))
        elif int(user_bet) == 8:
            break

    # gives a random output between 0-37, where 37 = 00
    random_output: Union[int, Any] = random.randint(0, 37)


    # determines whether the output is red or black
    roulette_color: str = ""


    #determines whether the output is red or black
    if random_output in range(1, 11) or random_output in range(19, 29):
        if random_output % 2 == 0:
            roulette_color = "Black"
            print("{} Black".format(random_output))
        else:
            roulette_color = "Red"
            print("{} Red".format(random_output))
    elif random_output in range(11, 19) or random_output in range(29, 37):
        if random_output % 2 == 0:
            roulette_color = "Red"
            print("{} Red".format(random_output))
        else:
            roulette_color = "Black"
            print("{} Black".format(random_output))


    #check if user bet is correct and allotes correct amount back
    def bet_result(random_output, user_account):
       # Even/Odd Bet
        if even_bet_amount == 0 and odd_bet_amount == 0:
            return ""
        elif random_output % 2 == 0:
            user_account = user_account + (even_bet_amount * 2)
            print ("It was even! Your new account balance is ${}".format(user_account))
        elif random_output % 2 != 0:
            user_account = user_account + (odd_bet_amount * 2)
            print ("It was odd! Your new account balance is ${}".format(user_account))
       # Black/Red Bet
        if black_bet_amount == 0 and red_bet_amount == 0:
            return ""
        elif roulette_color == "black":
            user_account = user_account + (black_bet_amount * 2)
            print("It was black! Your new account balance is ${}".format(user_account))
        elif roulette_color == "red":
            user_account = user_account + (red_bet_amount * 2)
            print("It was black! Your new account balance is ${}".format(user_account))
       # if low bet is true
        if random_output in range(1, 19) == True:
            user_account = user_account + (low_bet_amount * 2)
            print("It was between 1-18! Your new account balance is ${}".format(user_account))
        elif random_output in range(1, 19) == False:
            user_account = user_account - low_bet_amount
            print("It wasn't between 1-18. Your new account balance is ${}".format(user_account))
       # if high bet is true
        if random_output in range(13, 37) == True:
            user_account = user_account + (high_bet_amount * 2)
            print("It was between 13 and 36! Your new account balance is ${}".format(user_account))
        elif random_output in range(13, 37) == False:
            user_account = user_account - high_bet_amount
            print("It wasn't between 13-36! Your new account balance is ${}".format(user_account))
       # if single number bet is true
        if user_single_number_bet_number == 38:
            return ""
        if random_output == user_single_number_bet_number:
            user_account = user_account + single_number_bet_amount * 35
            print("Congratulations it was {}! Your new account balance is ${}".format(random_output, user_account))
        elif random_output != user_single_number_bet_number:
            user_account = user_account - single_number_bet_amount
            print("Sorry it wasn't {}. Your new account balance is ${}".format(random_output, user_account))


    #calls bet result function
    print (bet_result(random_output, user_account))
